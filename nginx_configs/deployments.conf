
# 当 config 文件太大提示 
# nginx: [warn] could not build optimal server_names_hash, 
# you should increase either server_names_hash_max_size: 1024 or 
# server_names_hash_bucket_size: 64; ignoring server_names_hash_bucket_size

# http {
#     server_names_hash_bucket_size 1024;
# }

# 使 server_names_hash_bucket_size 与 server_names_hash_max_size 同步大小
# 这个大小 >= conf.d/ 文件大小

# 原因
# 保存服务器名字的hash表是由指令 server_names_hash_max_size 
# 和 server_names_hash_bucket_size所控制的。参数hash bucket size总是等于hash表的大小
# ，并且是一路处理器缓存大小的倍数。在减少了在内存中的存取次数后，
# 使在处理器中加速查找hash表键值成为可能。
# 如果 hash bucket size等于一路处理器缓存的大小，
# 那么在查找键的时候，最坏的情况下在内存中查找的次数为2。
# 第一次是确定存储单元的地址，第二次是在存储单元中查找键值。
# 因此，如果Nginx给出需要增大 hash max size 或 hash bucket size的提示，

# ！！！ubuntu 不要将文件放在 /root 下， 会发生 permission deny 的情况



server {
    listen       80;
    server_name  www.taohespace.com;

    charset utf-8;

    location / {
       root /code/static_files/build;
       index index.html;
       try_files $uri /index.html;

    }

    location /api/ {
       proxy_pass  http://127.0.0.1:7001/; # 与后端项目启动端口保持一致
    }


    location @router {
        rewrite ^.*$ /index.html last;
    }
}

server {
    listen       80;
    server_name  vip002.taohespace.com.taohespace.com;

    charset utf-8;

    location / {
       root /code/pack-container/build;
       index index.html;
       try_files $uri /index.html;

    }

    location @router {
        rewrite ^.*$ /index.html last;
    }
}